$date
	Wed Nov 10 17:57:45 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fsm_tb $end
$var wire 8 ! sum [7:0] $end
$var wire 8 " count [7:0] $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$var reg 1 % sample_valid $end
$var reg 3 & sample_value [2:0] $end
$scope module dut $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var wire 1 % sample_valid $end
$var wire 3 ' sample_value [2:0] $end
$var reg 8 ( count [7:0] $end
$var reg 8 ) count_curr [7:0] $end
$var reg 8 * sum [7:0] $end
$var reg 8 + sum_curr [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
bx *
b0 )
bx (
b1 '
b1 &
0%
1$
0#
bx "
bx !
$end
#4
b0 "
b0 (
b0 !
b0 *
1#
#5
b1 )
b1 +
1%
0$
#8
0#
#12
b1 "
b1 (
b1 !
b1 *
1#
#13
b10 &
b10 '
0%
#16
0#
#20
1#
#21
b10 )
b100 +
b11 &
b11 '
1%
#24
0#
#28
b10 "
b10 (
b100 !
b100 *
1#
#29
0%
#32
0#
#36
1#
#37
b0 )
b0 +
1$
#40
0#
#44
b0 "
b0 (
b0 !
b0 *
1#
#48
0#
#52
1#
#56
0#
#60
1#
#64
0#
#68
1#
#72
0#
#76
1#
#80
0#
